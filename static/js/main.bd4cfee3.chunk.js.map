{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","cn","completed","TodoList","todos","map","id","username","getUserById","userId","usersFromServer","find","theBiggestTodoId","Math","max","todosWithUser","App","useState","setTodos","selectedUserId","setSelectedUserId","enteredTitle","setenteredTitle","selectUserError","setSelectUserError","enteredTitleError","setEnteredTitleError","action","method","onSubmit","event","preventDefault","currentTodos","htmlFor","type","placeholder","value","onChange","currentTarget","trim","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd4cfee3.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const { title, user } = todo;\n\n  return (\n    <article\n      data-id=\"1\"\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUserById = (userId: number): User | null => (\n  usersFromServer.find(user => user.id === userId) || null\n);\n\nconst theBiggestTodoId = (todos: Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id));\n};\n\nconst todosWithUser = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [enteredTitle, setenteredTitle] = useState('');\n  const [selectUserError, setSelectUserError] = useState(false);\n  const [enteredTitleError, setEnteredTitleError] = useState(false);\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(event.currentTarget.value);\n    setSelectUserError(false);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setenteredTitle(event.currentTarget.value.trim());\n    setEnteredTitleError(false);\n  };\n\n  const handleSubmit = (event: React.MouseEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setEnteredTitleError(!enteredTitle);\n    setSelectUserError(!selectedUserId);\n\n    if (enteredTitle && selectedUserId) {\n      setTodos(currentTodos => {\n        return [\n          ...currentTodos,\n          {\n            id: theBiggestTodoId(todos) + 1,\n            title: enteredTitle,\n            completed: false,\n            userId: +selectedUserId,\n            user: getUserById(+selectedUserId),\n          },\n        ];\n      });\n    }\n\n    setenteredTitle('');\n    setSelectedUserId('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={enteredTitle}\n            onChange={handleTitleChange}\n          />\n          {enteredTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={selectedUserId}\n            onChange={handleUserChange}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>))}\n          </select>\n          {selectUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}